---
- name: set hostname
  hostname:
    name: "{{ inventory_hostname | regex_replace('_','-')}}"

- block:
  - name: remove rhui client packages
    yum:
      name: rh-amazon-rhui-client*
      state: removed

  - name: get current repos
    command:
      cmd: ls /etc/yum.repos.d/
    register: repos
    changed_when: False

  - name: remove existing rhui repos
    file:
      path: "/etc/yum.repos.d/{{ item }}"
      state: absent
    loop: "{{ repos.stdout_lines }}"

  - name: install katello package
    yum:
      name: "https://{{ sat_url }}/pub/katello-ca-consumer-latest.noarch.rpm"
      state: present
      validate_certs: no
      disable_gpg_check: true
    when: sat_url is defined

  - name: define activation key
    set_fact:
      activation_key: "{{ 'RHEL' + ansible_distribution_major_version + '_' + env }}"

  - name: register system via subscription-manager
    redhat_subscription:
      state: present
      activationkey: "{{ activation_key }}"
      org_id: "{{ org_id | default('Default_Organization')}}"
    throttle: 1

  - name: include repos
    include_vars: "vars/{{ ansible_distribution + ansible_distribution_major_version }}.yml"

  - name: enable repos
    rhsm_repository:
      name: "{{ rhsm_enabled_repos }}"
      state: enabled

  when:
    - ansible_distribution == 'RedHat'

- block:
  - name: get current repos
    command:
      cmd: ls /etc/yum.repos.d/
    register: repos
    changed_when: False

  - name: install subscription-manager package
    yum:
      name: subscription-manager
      state: present
      disable_gpg_check: true

  - name: install katello package
    yum:
      name: "https://{{ sat_url }}/pub/katello-ca-consumer-latest.noarch.rpm"
      state: present
      validate_certs: no
      disable_gpg_check: true
    when: sat_url is defined

  - name: define activation key
    set_fact:
      activation_key: "{{ 'CentOS' + ansible_distribution_major_version + '_' + env }}"

  - name: register system via subscription-manager
    redhat_subscription:
      state: present
      activationkey: "{{ activation_key }}"
      org_id: "{{ org_id | default('Default_Organization')}}"
      pool: "{{ product_name_or_regex }}"
    throttle: 1

  - name: Create backup repos dir
    file:
      path: "/etc/yum.repos.centos"
      state: directory
      mode: 0755

  - name: Copy repo defs to backup dir
    copy:
      src: "/etc/yum.repos.d/{{ item }}"
      dest: "/etc/yum.repos.centos/{{ item }}"
      remote_src: yes
    loop: "{{ repos.stdout_lines }}"

  - name: remove pre-existing CentOS repos
    file:
      path: "/etc/yum.repos.d/{{ item }}"
      state: absent
    loop: "{{ repos.stdout_lines }}"

  when:
    - ansible_distribution == 'CentOS'
